<resources xmlns:tools="http://schemas.android.com/tools">
    <string name="app_name">CS 2340 Space Trader</string>
    <string name="title_activity_scrolling" tools:keep="@string/title_activity_scrolling">ScrollingActivity</string>
    <string name="large_text" tools:keep="@string/large_text">
        "Material is the metaphor.\n\n"

        "A material metaphor is the unifying theory of a rationalized space and a system of motion."
        "The material is grounded in tactile reality, inspired by the study of paper and ink, yet "
        "technologically advanced and open to imagination and magic.\n"
        "Surfaces and edges of the material provide visual cues that are grounded in reality. The "
        "use of familiar tactile attributes helps users quickly understand affordances. Yet the "
        "flexibility of the material creates new affordances that supercede those in the physical "
        "world, without breaking the rules of physics.\n"
        "The fundamentals of light, surface, and movement are key to conveying how objects move, "
        "interact, and exist in space and in relation to each other. Realistic lighting shows "
        "seams, divides space, and indicates moving parts.\n\n"

        "Bold, graphic, intentional.\n\n"

        "The foundational elements of print based design typography, grids, space, scale, color, "
        "and use of imagery guide visual treatments. These elements do far more than please the "
        "eye. They create hierarchy, meaning, and focus. Deliberate color choices, edge to edge "
        "imagery, large scale typography, and intentional white space create a bold and graphic "
        "interface that immerse the user in the experience.\n"
        "An emphasis on user actions makes core functionality immediately apparent and provides "
        "waypoints for the user.\n\n"

        "Motion provides meaning.\n\n"

        "Motion respects and reinforces the user as the prime mover. Primary user actions are "
        "inflection points that initiate motion, transforming the whole design.\n"
        "All action takes place in a single environment. Objects are presented to the user without "
        "breaking the continuity of experience even as they transform and reorganize.\n"
        "Motion is meaningful and appropriate, serving to focus attention and maintain continuity. "
        "Feedback is subtle yet clear. Transitions are efﬁcient yet coherent.\n\n"

        "3D world.\n\n"

        "The material environment is a 3D space, which means all objects have x, y, and z "
        "dimensions. The z-axis is perpendicularly aligned to the plane of the display, with the "
        "positive z-axis extending towards the viewer. Every sheet of material occupies a single "
        "position along the z-axis and has a standard 1dp thickness.\n"
        "On the web, the z-axis is used for layering and not for perspective. The 3D world is "
        "emulated by manipulating the y-axis.\n\n"

        "Light and shadow.\n\n"

        "Within the material environment, virtual lights illuminate the scene. Key lights create "
        "directional shadows, while ambient light creates soft shadows from all angles.\n"
        "Shadows in the material environment are cast by these two light sources. In Android "
        "development, shadows occur when light sources are blocked by sheets of material at "
        "various positions along the z-axis. On the web, shadows are depicted by manipulating the "
        "y-axis only. The following example shows the card with a height of 6dp.\n\n"

        "Resting elevation.\n\n"

        "All material objects, regardless of size, have a resting elevation, or default elevation "
        "that does not change. If an object changes elevation, it should return to its resting "
        "elevation as soon as possible.\n\n"

        "Component elevations.\n\n"

        "The resting elevation for a component type is consistent across apps (e.g., FAB elevation "
        "does not vary from 6dp in one app to 16dp in another app).\n"
        "Components may have different resting elevations across platforms, depending on the depth "
        "of the environment (e.g., TV has a greater depth than mobile or desktop).\n\n"

        "Responsive elevation and dynamic elevation offsets.\n\n"

        "Some component types have responsive elevation, meaning they change elevation in response "
        "to user input (e.g., normal, focused, and pressed) or system events. These elevation "
        "changes are consistently implemented using dynamic elevation offsets.\n"
        "Dynamic elevation offsets are the goal elevation that a component moves towards, relative "
        "to the component’s resting state. They ensure that elevation changes are consistent "
        "across actions and component types. For example, all components that lift on press have "
        "the same elevation change relative to their resting elevation.\n"
        "Once the input event is completed or cancelled, the component will return to its resting "
        "elevation.\n\n"

        "Avoiding elevation interference.\n\n"

        "Components with responsive elevations may encounter other components as they move between "
        "their resting elevations and dynamic elevation offsets. Because material cannot pass "
        "through other material, components avoid interfering with one another any number of ways, "
        "whether on a per component basis or using the entire app layout.\n"
        "On a component level, components can move or be removed before they cause interference. "
        "For example, a floating action button (FAB) can disappear or move off screen before a "
        "user picks up a card, or it can move if a snackbar appears.\n"
        "On the layout level, design your app layout to minimize opportunities for interference. "
        "For example, position the FAB to one side of stream of a cards so the FAB won’t interfere "
        "when a user tries to pick up one of cards.\n\n"
    </string>
    <string name="name">Name:</string>
    <string name="user_name">User Name</string>
    <string name="difficulty">Difficulty:</string>
    <string name="skill_points">Skill Points:</string>
    <string name="_16">16</string>
    <string name="pilot">Pilot</string>
    <string name="fighter">Fighter</string>
    <string name="trader">Trader</string>
    <string name="engineer">Engineer</string>
    <string name="_plus">+</string>
    <string name="_minus">-</string>
    <string name="_0">0</string>
    <string name="ok">OK</string>
    <string name="exit">EXIT</string>
    <string name="welcome">Welcome!</string>
    <string name="spaceship">Spaceship</string>
    <string name="name_1">Name</string>
    <string name="difficulty_1">Diffculty</string>
    <string name="credits">Credits</string>
    <string name="skill_points_1">Skill Points</string>
    <string name="create_your_universe">Create Your Universe</string>
    <string name="cannot_create_your_player">Cannot Create Your Player</string>
    <string name="yon_need_to_allocate_all_the_points">Yon need to allocate all the points!</string>
    <string name="back">Back</string>
    <string name="marketplace">Marketplace</string>
    <string name="planet">Planet</string>
    <string name="buy_items">Buy Items</string>
    <string name="total_expense">Total Expense</string>
    <string name="total_credit">Total Credit</string>
    <string name="_1000">1000</string>
    <string name="switch_to_sell">switch to sell</string>
    <string name="buy">buy</string>
    <string name="done">done</string>
    <string name="shipyard">shipyard</string>
    <string name="update_credit">update credit</string>
    <string name="mercenaries">Mercenaries</string>
    <string name="hire_mercenaries">Hire Mercenaries</string>
    <string name="switch_to_fire">switch to fire</string>
    <string name="select_a_planet">Select a Planet</string>
    <string name="region">Region</string>
    <string name="location">Location</string>
    <string name="travel_to_a_different_region">Travel to a different region</string>
    <string name="enter_the_mercenaries_market">Enter the Mercenaries Market</string>
    <string name="enter_the_market">Enter the Market</string>
    <string name="after_an_uneventful_trip_n_you_arrive_at_your_destination">
        After an uneventful trip,   you arrive at your destination.</string>
    <string name="shipyard_1">Shipyard</string>
    <string name="change_your_ship">Change your Ship</string>
    <string name="market">market</string>
    <string name="next">Next</string>
    <string name="you_are_in_earth_n_gnat_spaceship_fuel_3_203_760_l_available">
        You are in Earth   Gnat Spaceship | Fuel 3,203,760 L available</string>
    <string name="select_a_region_to_travel">Select a Region to Travel</string>
    <string name="select_a_region">select a region</string>
    <string name="tech_level">Tech Level</string>
    <string name="resource">Resource</string>
    <string name="color">Color</string>
    <string name="planets">Planets</string>
    <string name="fuel">Fuel</string>
    <string name="travel">Travel</string>
    <string name="stay_in_the_same_region_amp_next"><![CDATA[STAY IN THE SAME REGION & NEXT]]>
    </string>
    <string name="map">Map</string>
    <string name="start">START</string>
    <string name="mini_game">MINI GAME</string>
    <string name="space_trader">SPACE TRADER</string>
    <string name="in_market">in market</string>
    <string name="owned">owned |</string>
    <string name="select">Select</string>
    <string name="todo">TODO</string>
    <string name="music">music</string>
</resources>
